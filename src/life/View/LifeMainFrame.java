/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package life.View;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import life.Model.LifeCommunity;
import life.Model.LifeCommunityTemplate;

/**
 *
 * @author KeithW
 */
public class LifeMainFrame extends javax.swing.JFrame implements ActionListener {

    private LifeController life;
    private LifeCommunityView view;
    private LifeCommunity community;
    private int iHeight, iWidth;
    private Timer timer1;
    private String sViewMode;

    private enum GUIState {

        ANIMATE, MANUAL, FINISHED
    }
    private GUIState guiState;

    /**
     * Creates new form LifeMainFrame
     */
    public LifeMainFrame() {
        initComponents();

        sViewMode = "STATE";
        guiState = GUIState.MANUAL;
        setGUIState();

        LifeCommunityTemplate loader = new LifeCommunityTemplate();
        community = loader.load("LifeGliderGun.bmp");

        iHeight = iWidth = 40;
        timer1 = new Timer(100, this);

        life = new LifeController();
        view = new LifeCommunityView();

        view.setCommunityModel(community);
        view.setViewMode(sViewMode);

        this.add(life);
        this.add(view);

        // view.setBounds(0, this.panelControls.getHeight() + 8, 600, 600);
        this.setMinimumSize(new Dimension(516, 602));
        this.setBounds(0, 0, 516, 602);

    }

    private void setGUIState() {

        switch (this.guiState) {
            case MANUAL:
                this.butLoad.setEnabled(true);
                this.butAnimate.setEnabled(true);
                this.butNext.setEnabled(true);
                this.butStop.setEnabled(false);
                break;

            case FINISHED:
                this.butLoad.setEnabled(true);
                this.butAnimate.setEnabled(false);
                this.butNext.setEnabled(false);
                this.butStop.setEnabled(false);
                break;

            case ANIMATE:
                this.butLoad.setEnabled(false);
                this.butAnimate.setEnabled(false);
                this.butNext.setEnabled(false);
                this.butStop.setEnabled(true);
                break;
            default:
                break;
        }

    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.

        setGUIState();

        this.view.setBounds(0, 0 + this.panelControls.getHeight(), this.panelControls.getWidth(), this.getHeight() - this.panelControls.getHeight());

    }

    @Override
    public void actionPerformed(ActionEvent e) {

        this.community.calculateNextGeneration();
        this.community.doNextGeneration();

        if (this.community.getAlive() == 0) {
            this.timer1.stop();
            this.guiState = GUIState.FINISHED;
        }

        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelControls = new javax.swing.JPanel();
        butLoad = new javax.swing.JButton();
        butNext = new javax.swing.JButton();
        butAnimate = new javax.swing.JButton();
        butStop = new javax.swing.JButton();
        butToggle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        butLoad.setText("Load...");
        butLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLoadActionPerformed(evt);
            }
        });

        butNext.setText("Next");
        butNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNextActionPerformed(evt);
            }
        });

        butAnimate.setText("Animate");
        butAnimate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAnimateActionPerformed(evt);
            }
        });

        butStop.setText("Stop");
        butStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butStopActionPerformed(evt);
            }
        });

        butToggle.setText("Toggle");
        butToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlsLayout = new javax.swing.GroupLayout(panelControls);
        panelControls.setLayout(panelControlsLayout);
        panelControlsLayout.setHorizontalGroup(
            panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(butLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butAnimate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butStop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butToggle)
                .addContainerGap(283, Short.MAX_VALUE))
        );
        panelControlsLayout.setVerticalGroup(
            panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butLoad)
                    .addComponent(butNext)
                    .addComponent(butAnimate)
                    .addComponent(butStop)
                    .addComponent(butToggle))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 507, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLoadActionPerformed
        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser(".\\src\\life\\resources");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Patterns", "jpg", "gif", "bmp");
        chooser.setFileFilter(filter);

        int returnVal = chooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            System.out.println("You chose to open this file: "
                    + chooser.getSelectedFile().getName());

            LifeCommunityTemplate loader = new LifeCommunityTemplate();
            community = loader.load(chooser.getSelectedFile().getName());

            guiState = GUIState.MANUAL;
            view.setCommunityModel(community);
            view.repaint();
        }


    }//GEN-LAST:event_butLoadActionPerformed

    private void butNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNextActionPerformed
        // TODO add your handling code here:
        this.community.calculateNextGeneration();
        this.community.doNextGeneration();
        this.view.repaint();
    }//GEN-LAST:event_butNextActionPerformed

    private void butAnimateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAnimateActionPerformed
        // TODO add your handling code here:

        guiState = GUIState.ANIMATE;
        setGUIState();

        timer1.start();

    }//GEN-LAST:event_butAnimateActionPerformed

    private void butStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butStopActionPerformed
        // TODO add your handling code here:

        guiState = GUIState.MANUAL;
        setGUIState();

        timer1.stop();
    }//GEN-LAST:event_butStopActionPerformed

    private void butToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butToggleActionPerformed
        // TODO add your handling code here:

        if (this.sViewMode.equals("STATE")) {
            this.sViewMode = "TRANSITION";
        } else {
            this.sViewMode = "STATE";
        }

        view.setViewMode(sViewMode);

        view.repaint();
    }//GEN-LAST:event_butToggleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LifeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LifeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LifeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LifeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LifeMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAnimate;
    private javax.swing.JButton butLoad;
    private javax.swing.JButton butNext;
    private javax.swing.JButton butStop;
    private javax.swing.JButton butToggle;
    private javax.swing.JPanel panelControls;
    // End of variables declaration//GEN-END:variables
}
